version: '3.5'

services:
    nginx_app:
        container_name: ${APP_NAME}_nginx
        env_file:
            - .env
        build:
            context: ./docker/build/nginx
            dockerfile: Dockerfile
        volumes:
            - ${APPLICATION}:/var/www/html
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/conf.d
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        links:
            - app
            - redis
        networks:
            - MyNetwork

    app:
        container_name: ${APP_NAME}_app
        hostname: ${APP_NAME}.localhost
        links:
            - mongodb
        build:
            context: ./docker/build/php-fpm
            dockerfile: Dockerfile
        expose:
            - "9000"
        volumes:
            - ${APPLICATION}:/var/www/html
        environment:
            - COMPOSER_MEMORY_LIMIT=-1
            #- PHP_IDE_CONFIG:serverName=Xdebug
        depends_on:
            - mongodb
        user: 1000:1000
        networks:
            - MyNetwork

    queue_worker:
        container_name: ${APP_NAME}_queue_worker
        build:
            context: ./docker/build/php-fpm
            dockerfile: Dockerfile
        command: php artisan queue:work
        volumes:
            - ${APPLICATION}:/var/www/html
        depends_on:
            - app
            - redis
        user: 1000:1000
        networks:
            - MyNetwork

    schedule_runner:
        container_name: ${APP_NAME}_schedule_runner
        restart: always
        build:
            context: ./docker/build/php-fpm
            dockerfile: Dockerfile
        command: php artisan schedule:run
        volumes:
            - ${APPLICATION}:/var/www/html
        depends_on:
            - app
        user: 1000:1000
        networks:
            - MyNetwork

    mongodb:
        image: mongo
        container_name: ${APP_NAME}_mongodb
        ports:
            - "27018:27018"
        volumes:
            - mongodb-data:/data/db
            - ./database/initialization/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
        networks:
            - MyNetwork

    redis:
        container_name: ${APP_NAME}_redis
        env_file:
            - .env
        hostname: laravel-ddd-example.redis
        image: redis
        ports:
            - "${REDIS_PORT}:${REDIS_PORT}"
        networks:
            - MyNetwork

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
        hostname: elasticsearch.localhost
        container_name: ${APP_NAME}_elasticsearch
        ports:
            - "${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}"
        environment:
            discovery.type: "single-node"
        networks:
            - MyNetwork

volumes:
    esdata:
    database:
    mongodb-data:

networks:
    MyNetwork:
        driver: bridge
        name: MyNetwork
